{
  "hash": "741556cb511a8563be43a2396364659c",
  "result": {
    "markdown": "---\ntitle: \"Explore Cognitive Structure for Working Memory\"\nauthor: \"Liang Zhang\"\ndate: \"2022-05-09\"\ndraft: false\nformat: \n  html:\n    code-fold: true\n    toc: true\n    toc-location: left\ncategories: [structure, wm]\nexecute:\n  warning: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(corrr)\nlibrary(BayesFM)\n```\n:::\n\n::: {.cell hash='index_cache/html/load-data_b01d62ac5537ca3f528595e9c7c22f08'}\n\n```{.r .cell-code}\ntargets::tar_load(users, store = here::here(\"preproc/_targets\"))\nind_filt <- readxl::read_excel(here::here(\"config/indices_filtering.xlsx\"))\ndim_order <- c(\"attention\", \"multitask\", \"switching\", \"inhibition\", \n               \"reasoning\", \"complex span\", \"working memory\", \"short term memory\", \n               \"long term memory\", \"probability learning\",\n               \"speeded IP\", \"strategic IP\", \n               \"perception\", \"math\", \"language\")\nindices_clean <- targets::tar_read(indices_final, store = here::here(\"preproc/_targets\")) |> \n  full_join(ind_filt, by = c(\"game_name\", \"index_name\")) |> \n  filter(\n    !is.na(check_result) & check_result != \"target-stash\",\n    grade != \"20220303级\",\n    !game_name %in% c(\"文字推理\", \"数字推理\")\n  ) |>\n  arrange(factor(dimension, dim_order)) |>\n  mutate(test = if_else(reversed, -test, test)) |>\n  group_by(game_name, index_name) |>\n  mutate(test = if_else(test %in% boxplot.stats(test)$out, NA_real_, test)) |> \n  ungroup()\nindices_memory <- indices_clean |> \n  filter(\n    dimension %in% c(\"complex span\", \"working memory\", \"short term memory\", \"long term memory\"),\n    !game_name %in% c(\"言语记忆\", \"连续再认\", \"魔术师终极\", \"人工语言-中级\", \"图片记忆\", \"欢乐餐厅\", \"过目不忘PRO\")\n  ) |>\n  add_count(user_id, game_name) |> \n  mutate(\n    game_index = if_else(\n      n == 1, \n      game_name, \n      str_c(game_name, index_name, sep = \"-\")\n    )\n  ) |> \n  pivot_wider(\n    id_cols = user_id,\n    names_from = game_index,\n    values_from = test\n  ) |> \n  select(-user_id)\n```\n:::\n\n\nThe include tasks: \n\n* 蝴蝶照相机\n* 打靶场\n* 幸运小球\n* 数字卡片\n* 格子卡片\n* 美术卡片\n* 文字卡片\n* 密码箱\n* 位置记忆PRO\n* 顺背数PRO\n* 宇宙黑洞\n\n# Correlation Matrix\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncorrelate(indices_memory, quiet = TRUE) |> \n  rearrange(method = \"HC\") |> \n  stretch() |> \n  mutate(across(c(x, y), as_factor)) |>\n  ggplot(aes(x, y)) +\n  geom_tile(aes(fill = r)) +\n  scico::scale_fill_scico(palette = \"bam\", midpoint = 0, direction = -1) +\n  coord_fixed() +\n  theme_minimal(base_size = 18) +\n  labs(x = \"\", y = \"\", fill = \"Pearson's\", color = \"\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n# Multidimensional Scaling\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmds <- indices_memory |> \n  cor(use = \"pairwise\") |> \n  smacof::sim2diss(to.dist = TRUE) |> \n  smacof::mds(ndim = 2, type = \"mspline\")\n# plot(mds, plot.type = \"Shepard\", main = \"Shepard Diagram (Ratio Transformation)\")\n# par(family = \"SimHei\")\nplot(mds)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n# Exploratory Factor Analysis\n\n## Traditional\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnfactors_test <- psych::nfactors(indices_memory)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n* Correlated latent factors\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- psych::fa(indices_memory, 3)\npsych::fa.diagram(fit)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n* Bifactor model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_bifac <- psych::omega(indices_memory, 3, plot = FALSE)\npsych::omega.diagram(fit_bifac)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n## Bayesian Factor Analysis\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-8_db56947bff702d40e290fbd9004526d6'}\n\n```{.r .cell-code}\nmcmc <- indices_memory |> \n  mutate(across(.fns = ~ scale(.)[, 1])) |> \n  befa(verbose = FALSE) |> \n  post.column.switch() |> \n  post.sign.switch()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhppm <- summary(mcmc, what = \"hppm\")\nhppm |> \n  pluck(\"alpha\", \"m1\") |> \n  as_tibble(rownames = \"alpha_term\") |> \n  separate(alpha_term, c(NA, \"game_index\"), sep = \":\") |> \n  mutate(game_index = reorder(game_index, dedic)) |> \n  ggplot(aes(game_index, dedic)) +\n  geom_tile(aes(fill = mean)) +\n  geom_text(aes(label = round(mean, 2)), color = \"white\") +\n  scico::scale_fill_scico(palette = \"bam\", midpoint = 0, direction = -1) +\n  coord_fixed() +\n  theme_minimal(base_size = 18) +\n  labs(x = \"Term\", y = \"Factor\", \n       title = str_c(\"Posterior Probability: \", round(hppm$hppm$prob, 2), \n                     \", with \", hppm$hppm$nfac, \" factors\")) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n\n# Confirmatory Factor Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfitted1 <- lavaan::cfa(\n  'Updating =~ `美术卡片` + `数字卡片` + `格子卡片` + `文字卡片`\n  # AscMem =~ `人工语言-中级` + `欢乐餐厅` + 图片记忆\n  VerbalSTM =~ `幸运小球` + `密码箱` + `顺背数PRO`\n  SpatialSTM =~ `宇宙黑洞` + `打靶场` + `蝴蝶照相机` + `位置记忆PRO`',\n  indices_memory, std.lv = TRUE, std.ov = TRUE\n)\nsemPlot::semPaths(\n  fitted1, what = \"std\", edge.color = \"black\", rotation = 2,\n  sizeMan = 6, sizeLat = 8, edge.label.cex = 0.6, \n  nCharEdges = 5, esize = 1, trans = 1, nCharNodes = 0\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=576}\n:::\n\n```{.r .cell-code}\nlavaan::summary(fitted1, fit.measures = TRUE, estimates = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nlavaan 0.6-11 ended normally after 17 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        25\n                                                      \n                                                  Used       Total\n  Number of observations                           314         468\n                                                                  \nModel Test User Model:\n                                                      \n  Test statistic                               104.853\n  Degrees of freedom                                41\n  P-value (Chi-square)                           0.000\n\nModel Test Baseline Model:\n\n  Test statistic                               809.797\n  Degrees of freedom                                55\n  P-value                                        0.000\n\nUser Model versus Baseline Model:\n\n  Comparative Fit Index (CFI)                    0.915\n  Tucker-Lewis Index (TLI)                       0.887\n\nLoglikelihood and Information Criteria:\n\n  Loglikelihood user model (H0)              -4543.033\n  Loglikelihood unrestricted model (H1)      -4490.606\n                                                      \n  Akaike (AIC)                                9136.065\n  Bayesian (BIC)                              9229.800\n  Sample-size adjusted Bayesian (BIC)         9150.508\n\nRoot Mean Square Error of Approximation:\n\n  RMSEA                                          0.070\n  90 Percent confidence interval - lower         0.054\n  90 Percent confidence interval - upper         0.087\n  P-value RMSEA <= 0.05                          0.022\n\nStandardized Root Mean Square Residual:\n\n  SRMR                                           0.051\n```\n:::\n:::\n\n\n<!-- ## No Associative Memory -->\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# fitted2 <- lavaan::cfa(\n#   'Updating =~ `美术卡片` + `数字卡片` + `格子卡片` + `文字卡片` + `魔术师终极`\n#   # AscMem =~ `人工语言-中级` + `欢乐餐厅` + 图片记忆\n#   VerbalSTM =~ `幸运小球` + `密码箱` + `过目不忘PRO` + `顺背数PRO`\n#   SpatialSTM =~ `宇宙黑洞` + `打靶场` + `蝴蝶照相机` + `位置记忆PRO`',\n#   indices_memory, std.lv = TRUE, std.ov = TRUE\n# )\n# semPlot::semPaths(\n#   fitted2, what = \"std\", edge.color = \"black\", rotation = 2,\n#   sizeMan = 6, sizeLat = 8, edge.label.cex = 0.6, \n#   nCharEdges = 5, esize = 1, trans = 1, nCharNodes = 0\n# )\n# lavaan::summary(fitted2, fit.measures = TRUE, estimates = FALSE)\n```\n:::\n\n\n<!-- ## Input Material Model -->\n\n<!-- > Not fitted well. -->\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# fitted3 <- lavaan::cfa(\n#   'Verbal =~ 数字卡片 + 文字卡片 + 幸运小球 + 密码箱 + 过目不忘PRO + 顺背数PRO\n#   Spatial =~ 格子卡片 + 打靶场 + 蝴蝶照相机 + 位置记忆PRO\n#   Object =~ 美术卡片 + 宇宙黑洞 + 魔术师终极',\n#   indices_memory, std.lv = TRUE, std.ov = TRUE\n# )\n# semPlot::semPaths(\n#   fitted3, what = \"std\", edge.color = \"black\", rotation = 2,\n#   sizeMan = 6, sizeLat = 8, edge.label.cex = 0.6, \n#   nCharEdges = 5, esize = 1, trans = 1, nCharNodes = 0\n# )\n# lavaan::summary(fitted3, fit.measures = TRUE, estimates = FALSE)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}